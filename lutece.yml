---
# change ansible.cfg ask_pass to true is needed
- hosts: raspberry-lutece
  become: true
  remote_user: "{{ default_user }}"
  gather_facts: "no"
  vars_files:
    - ./secrets.yml

  pre_tasks:
    - local_action: command ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no {{ default_user }}@{{ ansible_host }} "echo success"
      register: default_connection_attempt
      ignore_errors: "yes"

    - set_fact:
        default_connection_failed: "{{ default_connection_attempt.rc != 0 }}"

    - debug:
        msg: "Default connection for {{ ansible_host }} disabled ? {{ default_connection_failed }}"

  roles:
    - role: create_ssh_user
      users:
        - "{{ server_user }}"
      when: not default_connection_failed

- name: Install shared configuration
  import_playbook: shared_install.yml
  vars:
    runnig_hosts: raspberry-lutece
    open_dns_port: "yes"

- hosts: raspberry-lutece
  become: true
  remote_user: "{{ server_user.name }}"
  vars:
    - disk_mount_point: /media/Lutece_1
  vars_files:
    - ./secrets.yml

  roles:
    - role: disks_setup
      disks:
        - mount_point: "{{ disk_mount_point }}"
          disk_label: Lutece_1

    - role: nextcloud_client
      nextcloud_user: '{{ server_user.name }}'
      nextcloud_group: '{{ server_user.group }}'
      nextcloud_folder: '{{ disk_mount_point }}/Nextcloud'
      nextcloud_excluded_directories_path: '{{ disk_mount_point }}/.nextcloud_excluded_directories'
      nextcloud_excluded_directories: []
      tags: nextcloud

    - role: haelle.certbot
      certbot_install_method: snap
      certbot_create_if_missing: 'yes'
      certbot_create_method: standalone
      certbot_admin_email: "{{ certbot_email }}"
      certbot_certs:
        - domains:
          - "trou-noir.alxs.fr"
        - domains:
          - "plex.alxs.fr"
        - domains:
          - "download.alxs.fr"
        - domains:
          - "photo.alxs.fr"
      tags:
        - certbot
        - pi-hole
        - plex
        - transmission
        - photoprism

    - role: pi_hole
      docker_user: "{{ server_user.name }}"
      tags: pi-hole

    - role: plex
      plex_root: "{{ disk_mount_point }}/Plex"
      plex_database: "{{ disk_mount_point }}/Plex/database"
      plex_transcode_temp_dir: "{{ disk_mount_point }}/Plex/transcode"
      plex_medias: "{{ disk_mount_point }}/medias"
      docker_user: "{{ server_user.name }}"
      tags: plex

    - role: transmission
      docker_user: '{{ server_user.name }}'
      transmission_data: '{{ disk_mount_point }}/medias'
      transmission_directory: '{{ disk_mount_point }}/medias/transmission-home'
      transmission_rpc_login: '{{ transmission_login }}'
      transmission_rpc_password: '{{ transmission_password}}'
      tags: transmission

    #- role: photoprism
      #docker_user: '{{ server_user.name }}'
      #photoprism_directory: "{{ disk_mount_point }}/photoprism"
      #photoprism_data: "{{ disk_mount_point }}/Nextcloud/Photos"
      #photoprism_admin_password: "{{ photoprism_password }}"
      #photoprism_mariadb_password: "{{ photoprism_db_password }}"
      #tags: photoprism

    - role: librephotos
      docker_user: '{{ server_user.name }}'
      librephotos_directory: "{{ disk_mount_point }}/librephotos"
      librephotos_data: "{{ disk_mount_point }}/Nextcloud/Photos"
      librephotos_media: "{{ librephotos_directory }}/media"
      librephotos_cache: "{{ librephotos_directory }}/cache"
      librephotos_database: "{{ librephotos_directory }}/database"
      librephotos_admin_login: "{{ librephotos_admin_login_secret }}"
      librephotos_admin_password: "{{ librephotos_admin_password_secret }}"
      librephotos_admin_email: "{{ certbot_email }}"
      librephotos_secret_key: "{{ librephotos_secret_key_secret }}"
      librephotos_mapbox_api_key: "{{ mapbox_api_key }}"
      librephotos_db_password: "{{ librephotos_db_password_secret }}"
      tags: librephotos
